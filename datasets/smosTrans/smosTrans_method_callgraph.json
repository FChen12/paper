{"ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiungiRimuoviInsegnamentiComeIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereIstanza()": {"calls": [], "called_by": [["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "S"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ManagerClasse.ottenereClassePerStudente(Utente)", "S"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "S"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerUtente", "method_name": "ottenereIstanza", "params": []}, "ManagerInsegnamento.ottenereIstanza()": {"calls": [], "called_by": [["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerInsegnamento", "method_name": "ottenereIstanza", "params": []}, "ManagerIndirizzo.ottenereIstanza()": {"calls": [], "called_by": [["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerIndirizzo", "method_name": "ottenereIstanza", "params": []}, "ManagerUtente.eAmministratore(Utente)": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eAmministratore", "params": ["Utente"]}, "ManagerInsegnamento.ottenereInsegnamentoPerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerInsegnamento.loadRecordFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoPerId", "params": ["int"]}, "ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Insegnamento.ottenereId()", "M"], ["Indirizzo.ottenereIdIndirizzo()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "avereInsegnamento", "params": ["Insegnamento", "Indirizzo"]}, "ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "M"], ["Insegnamento.ottenereId()", "M"], ["Indirizzo.ottenereIdIndirizzo()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "assegnareInsegnamentoComeIndirizzo", "params": ["Indirizzo", "Insegnamento"]}, "ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "M"], ["Insegnamento.ottenereId()", "M"], ["Indirizzo.ottenereIdIndirizzo()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "rimuovereInsegnamentoComeIndirizzo", "params": ["Indirizzo", "Insegnamento"]}, "EntitaNonTrovataEccezione.getMessage()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EntitaNonTrovataEccezione", "method_name": "getMessage", "params": []}, "EntitaNonTrovataEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EntitaNonTrovataEccezione", "method_name": "printStackTrace", "params": []}, "ConnessioneEccezione.getMessage()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ConnessioneEccezione", "method_name": "getMessage", "params": []}, "ConnessioneEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ConnessioneEccezione", "method_name": "printStackTrace", "params": []}, "ValoreNonValidoEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ValoreNonValidoEccezione", "method_name": "printStackTrace", "params": []}, "CampoObbligatorioEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "CampoObbligatorioEccezione", "method_name": "printStackTrace", "params": []}, "EntitaDuplicataEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EntitaDuplicataEccezione", "method_name": "printStackTrace", "params": []}, "ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiungiRimuoviInsegnamentiComeIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiungiRimuoviInsegnamentiComeIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerIndirizzo.elimina(Indirizzo)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaIndirizzo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.elimina(Indirizzo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Indirizzo.ottenereIdIndirizzo()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "elimina", "params": ["Indirizzo"]}, "CampoObbligatorioEccezione.getMessage()": {"calls": [], "called_by": [["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "CampoObbligatorioEccezione", "method_name": "getMessage", "params": []}, "ValoreNonValidoEccezione.getMessage()": {"calls": [], "called_by": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ValoreNonValidoEccezione", "method_name": "getMessage", "params": []}, "ServletEliminaIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerInsegnamento.ottenereInsegnamenti()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletIndirizzoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletIndirizzoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.ottenereInsegnamenti()": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamenti", "params": []}, "ServletIndirizzoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletIndirizzoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletIndirizzoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Indirizzo.settareNome(String)", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerIndirizzo.inserire(Indirizzo)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerIndirizzo.esiste(Indirizzo)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletInserireIndirizzo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserireIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Indirizzo.settareNome(String)": {"calls": [], "called_by": [["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerIndirizzo.loadRecordFromRs(ResultSet)", "M"]], "class_name": "Indirizzo", "method_name": "settareNome", "params": ["String"]}, "ManagerIndirizzo.esiste(Indirizzo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Indirizzo.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "esiste", "params": ["Indirizzo"]}, "ManagerIndirizzo.inserire(Indirizzo)": {"calls": [["Indirizzo.settareIdIndirizzo(int)", "M"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["Indirizzo.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "inserire", "params": ["Indirizzo"]}, "EntitaDuplicataEccezione.getMessage()": {"calls": [], "called_by": [["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EntitaDuplicataEccezione", "method_name": "getMessage", "params": []}, "ServletInserireIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserireIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserireIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraDettagliIndirizzo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraDettagliIndirizzo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.ottenereIndirizzoPerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerIndirizzo.loadRecordFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoPerId", "params": ["int"]}, "ServletMostraDettagliIndirizzo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraDettagliIndirizzo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraDettagliIndirizzo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerIndirizzo.ottenereIndirizzoElenco()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerIndirizzo.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoIndirizzi.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoIndirizzi", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerIndirizzo.ottenereIndirizzoElenco()": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerIndirizzo.loadRecordsFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoElenco", "params": []}, "ServletMostraElencoIndirizzi.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoIndirizzi.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoIndirizzi", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerClasse.eliminare(Classe)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereIstanza()": {"calls": [], "called_by": [["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "S"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerClasse", "method_name": "ottenereIstanza", "params": []}, "Classe.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.esiste(Classe)", "M"], ["ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "M"], ["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.inserire(Classe)", "M"], ["ManagerClasse.aggiornare(Classe)", "M"]], "class_name": "Classe", "method_name": "ottenereAnnoAccademico", "params": []}, "ManagerClasse.eliminare(Classe)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Classe.ottenereIdClasse()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "eliminare", "params": ["Classe"]}, "ServletEliminaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerClasse.esiste(Classe)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerClasse.inserire(Classe)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["Classe.settareAnnoAccademico(int)", "M"], ["Classe.settareIdIndirizzo(int)", "M"], ["Classe.settareNome(String)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletInserireClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserireClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.settareNome(String)": {"calls": [], "called_by": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.loadRecordFromRs(ResultSet)", "M"]], "class_name": "Classe", "method_name": "settareNome", "params": ["String"]}, "Classe.settareAnnoAccademico(int)": {"calls": [], "called_by": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.loadRecordFromRs(ResultSet)", "M"]], "class_name": "Classe", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Classe.settareIdIndirizzo(int)": {"calls": [], "called_by": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.loadRecordFromRs(ResultSet)", "M"]], "class_name": "Classe", "method_name": "settareIdIndirizzo", "params": ["int"]}, "ManagerClasse.esiste(Classe)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Classe.ottenereAnnoAccademico()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Classe.ottenereIdIndirizzo()", "M"], ["DBConnessione.ottenereConnesione()", "S"], ["Utility.eNull(String)", "S"], ["Classe.ottenereNome()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "esiste", "params": ["Classe"]}, "ManagerClasse.inserire(Classe)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Classe.ottenereAnnoAccademico()", "M"], ["Utility.eNull(Integer)", "S"], ["Classe.settareIdClasse(int)", "M"], ["Classe.ottenereIdIndirizzo()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Utility.eNull(String)", "S"], ["Classe.ottenereNome()", "M"], ["Utility.ottenereValoreMassimo(String,String)", "S"]], "called_by": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "inserire", "params": ["Classe"]}, "ServletInserireClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserireClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserireClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerAnnoAccademico(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerClasse.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerAnnoAccademico", "params": ["int"]}, "ServletMostraElencoClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraIDettagliDellaClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraIDettagliDellaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerID(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerClasse.loadRecordFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerID", "params": ["int"]}, "ServletMostraIDettagliDellaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraIDettagliDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraIDettagliDellaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["Giustificare.settareAnnoAccademico(int)", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "M"], ["Giustificare.settareDataGiustificare(Date)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerRegistrati.esiste(Giustificare)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Utility.String2Date(String)", "S"]], "called_by": [["ServletAggiornamentoGiustificato.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiornamentoGiustificato", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereIstanza()": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "S"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerRegistrati", "method_name": "ottenereIstanza", "params": []}, "Giustificare.settareAnnoAccademico(int)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "M"]], "class_name": "Giustificare", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Utility.String2Date(String)": {"calls": [], "called_by": [["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "Utility", "method_name": "String2Date", "params": ["String"]}, "Giustificare.settareDataGiustificare(Date)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "M"]], "class_name": "Giustificare", "method_name": "settareDataGiustificare", "params": ["Date"]}, "ManagerRegistrati.esiste(Giustificare)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Giustificare.ottenereIdGiustificare()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Giustificare"]}, "ManagerRegistrati.aggiornareGiustificare(Giustificare)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Giustificare.ottenereIdUtente()", "M"], ["Utility.eNull(Integer)", "S"], ["Giustificare.ottenereAnnoAccademico()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Giustificare.ottenereDataGiustificare()", "M"], ["Utility.eNull(Date)", "S"], ["Giustificare.ottenereIdGiustificare()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "aggiornareGiustificare", "params": ["Giustificare"]}, "ServletAggiornamentoGiustificato.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiornamentoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiornamentoGiustificato", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["Classe.ottenereIdClasse()", "M"], ["Ritardo.settareAnnoAccademico(int)", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["Ritardo.settareDataRitardo(Date)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["Ritardo.settareTempoRitardo(String)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerRegistrati.avereRitardo(RegistratiLinea)", "M"], ["Assenza.settareDataAssenza(Date)", "M"], ["Assenza.settareAnnoAccademico(int)", "M"], ["RegistratiLinea.ottenereStudente()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerRegistrati.avereAssenza(RegistratiLinea)", "M"], ["Assenza.settareIdUtente(int)", "M"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "M"], ["Ritardo.settareIdUtente(int)", "M"], ["Assenza.settareIdGiustificare(Integer)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["RegistratiLinea.ottenereAssenza()", "M"], ["RegistratiLinea.ottenereRitardo()", "M"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"], ["Utility.String2Date(String)", "S"]], "called_by": [["ServletAggiornareIlRegistro.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiornareIlRegistro", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.ottenereIdClasse()": {"calls": [], "called_by": [["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.eliminare(Classe)", "M"], ["ManagerClasse.aggiornare(Classe)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Classe", "method_name": "ottenereIdClasse", "params": []}, "ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)": {"calls": [["VoceElencoUtenti.ottenereId()", "M"], ["RegistratiLinea.settareStudente(VoceElencoUtenti)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["RegistratiLinea.settareAssenza(Assenza)", "M"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "M"], ["RegistratiLinea.settareRitardo(Ritardo)", "M"], ["ManagerUtente.ottenereStudentePerClasseId(int)", "M"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "M"]], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereRegistratiPerClasseIDEData", "params": ["int", "Date"]}, "RegistratiLinea.ottenereStudente()": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "RegistratiLinea", "method_name": "ottenereStudente", "params": []}, "VoceElencoUtenti.ottenereId()": {"calls": [], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "VoceElencoUtenti", "method_name": "ottenereId", "params": []}, "ManagerRegistrati.avereAssenza(RegistratiLinea)": {"calls": [["RegistratiLinea.ottenereAssenza()", "M"]], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "avereAssenza", "params": ["RegistratiLinea"]}, "Assenza.settareAnnoAccademico(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Assenza", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Assenza.settareDataAssenza(Date)": {"calls": [], "called_by": [["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Assenza", "method_name": "settareDataAssenza", "params": ["Date"]}, "Assenza.settareIdGiustificare(Integer)": {"calls": [], "called_by": [["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.eliminareGiustificare(int)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"]], "class_name": "Assenza", "method_name": "settareIdGiustificare", "params": ["Integer"]}, "Assenza.settareIdUtente(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Assenza", "method_name": "settareIdUtente", "params": ["int"]}, "ManagerRegistrati.inserireAssenza(Assenza)": {"calls": [["Assenza.settareIdAssenza(int)", "M"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Assenza.ottenereAnnoAccademico()", "M"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["Utility.eNull(Integer)", "S"], ["Assenza.ottenereDataAssenza()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Assenza.ottenereIdGiustificare()", "M"], ["Utility.eNull(Date)", "S"], ["Assenza.ottenereIdUtente()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "inserireAssenza", "params": ["Assenza"]}, "RegistratiLinea.ottenereAssenza()": {"calls": [], "called_by": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.avereAssenza(RegistratiLinea)", "M"]], "class_name": "RegistratiLinea", "method_name": "ottenereAssenza", "params": []}, "ManagerRegistrati.eliminareAssenza(Assenza)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Assenza.ottenereIdGiustificare()", "M"], ["Assenza.ottenereIdAssenza()", "M"], ["ManagerRegistrati.eliminareGiustificare(int)", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "eliminareAssenza", "params": ["Assenza"]}, "ManagerRegistrati.avereRitardo(RegistratiLinea)": {"calls": [["RegistratiLinea.ottenereRitardo()", "M"]], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "avereRitardo", "params": ["RegistratiLinea"]}, "Ritardo.settareAnnoAccademico(int)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Ritardo", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Ritardo.settareDataRitardo(Date)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Ritardo", "method_name": "settareDataRitardo", "params": ["Date"]}, "Ritardo.settareIdUtente(int)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Ritardo", "method_name": "settareIdUtente", "params": ["int"]}, "Ritardo.settareTempoRitardo(String)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Ritardo", "method_name": "settareTempoRitardo", "params": ["String"]}, "ManagerRegistrati.inserireRitardo(Ritardo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["Ritardo.ottenereIdUtente()", "M"], ["Ritardo.ottenereTempoRitardo()", "M"], ["Utility.eNull(Integer)", "S"], ["Ritardo.settareIdRitardo(int)", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(Date)", "S"], ["Utility.eNull(String)", "S"], ["Ritardo.ottenereDataRitardo()", "M"], ["Ritardo.ottenereAnnoAccademico()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "inserireRitardo", "params": ["Ritardo"]}, "RegistratiLinea.ottenereRitardo()": {"calls": [], "called_by": [["ManagerRegistrati.avereRitardo(RegistratiLinea)", "M"], ["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "RegistratiLinea", "method_name": "ottenereRitardo", "params": []}, "ManagerRegistrati.aggiornareRitardo(Ritardo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Ritardo.ottenereIdUtente()", "M"], ["Ritardo.ottenereTempoRitardo()", "M"], ["Ritardo.ottenereIdRitardo()", "M"], ["DBConnessione.ottenereConnesione()", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(Date)", "S"], ["Utility.eNull(String)", "S"], ["Ritardo.ottenereDataRitardo()", "M"], ["Ritardo.ottenereAnnoAccademico()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "aggiornareRitardo", "params": ["Ritardo"]}, "ManagerRegistrati.eliminareRitardo(Ritardo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Ritardo.ottenereIdRitardo()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "eliminareRitardo", "params": ["Ritardo"]}, "ServletAggiornareIlRegistro.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiornareIlRegistro.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiornareIlRegistro", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerRegistrati.esiste(Giustificare)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerRegistrati.eliminareGiustificare(int)", "M"], ["Giustificare.ottenereIdGiustificare()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaGiustifica.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Giustificare.ottenereIdGiustificare()": {"calls": [], "called_by": [["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"], ["ManagerRegistrati.esiste(Giustificare)", "M"]], "class_name": "Giustificare", "method_name": "ottenereIdGiustificare", "params": []}, "ManagerRegistrati.eliminareGiustificare(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Assenza.settareIdGiustificare(Integer)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ManagerRegistrati.eliminareAssenza(Assenza)", "M"], ["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "eliminareGiustificare", "params": ["int"]}, "ServletEliminaGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerRegistrati.eliminareNota(Nota)", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaNota.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.eliminareNota(Nota)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Nota.ottenereIdNota()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "eliminareNota", "params": ["Nota"]}, "ServletEliminaNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerRegistrati.esiste(Assenza)", "M"], ["Giustificare.settareDataGiustificare(Date)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerRegistrati.esiste(Giustificare)", "M"], ["Utility.String2Date(String)", "S"], ["Giustificare.settareIdUtente(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Giustificare.settareAnnoAccademico(int)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletInserireGiustifica.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserireGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Giustificare.settareIdUtente(int)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "M"]], "class_name": "Giustificare", "method_name": "settareIdUtente", "params": ["int"]}, "ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIdAssenza", "params": ["int"]}, "ManagerRegistrati.esiste(Assenza)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Assenza.ottenereIdAssenza()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "M"], ["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.avereGiustificare(Assenza)", "M"]], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Assenza"]}, "ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)": {"calls": [["Giustificare.settareIdGiustificare(int)", "M"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"], ["Giustificare.ottenereIdUtente()", "M"], ["Utility.eNull(Integer)", "S"], ["Assenza.settareIdGiustificare(Integer)", "M"], ["Giustificare.ottenereAnnoAccademico()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Giustificare.ottenereDataGiustificare()", "M"], ["Utility.eNull(Date)", "S"], ["Giustificare.ottenereIdGiustificare()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "inserireGiustificare", "params": ["Giustificare", "Assenza"]}, "ServletInserireGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserireGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserireGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["Nota.settareDataNota(Date)", "M"], ["Nota.settareDescrizione(String)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["Nota.settareInsegnante(String)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["Utility.String2Date(String)", "S"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Utente.ottenereId()", "M"], ["Nota.settareAnnoAccademico(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["Nota.settareIdUtente(int)", "M"]], "called_by": [["ServletInserisciNuovaNota.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserisciNuovaNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.ottenereId()": {"calls": [], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "ottenereId", "params": []}, "Nota.settareAnnoAccademico(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Nota.settareDataNota(Date)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareDataNota", "params": ["Date"]}, "Nota.settareIdUtente(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareIdUtente", "params": ["int"]}, "Nota.settareInsegnante(String)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareInsegnante", "params": ["String"]}, "Nota.settareDescrizione(String)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareDescrizione", "params": ["String"]}, "ManagerRegistrati.inserireNota(Nota)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["Nota.ottenereDataNota()", "M"], ["Nota.ottenereInsegnante()", "M"], ["Nota.settareIdNota(int)", "M"], ["DBConnessione.ottenereConnesione()", "S"], ["Nota.ottenereDescrizione()", "M"], ["Nota.ottenereAnnoAccademico()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(Date)", "S"], ["Nota.ottenereIdUtente()", "M"], ["Utility.eNull(String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "inserireNota", "params": ["Nota"]}, "ServletInserisciNuovaNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserisciNuovaNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserisciNuovaNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"], ["Nota.settareDataNota(Date)", "M"], ["Nota.settareDescrizione(String)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["Nota.settareInsegnante(String)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerRegistrati.ottenereNotaPerId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Utente.ottenereId()", "M"], ["Nota.settareAnnoAccademico(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["Nota.settareIdNota(int)", "M"], ["Nota.ottenereIdNota()", "M"], ["Utility.String2Date(String)", "S"], ["Nota.settareIdUtente(int)", "M"]], "called_by": [["ServletMostraDettagliNota.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraDettagliNota", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereNotaPerId(int)": {"calls": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "O"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereNotaPerId", "params": ["int"]}, "Nota.ottenereIdNota()": {"calls": [], "called_by": [["ManagerRegistrati.eliminareNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "ottenereIdNota", "params": []}, "Nota.settareIdNota(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "M"], ["ManagerRegistrati.inserireNota(Nota)", "M"], ["TestRegistrati.main(String[])", "M"], ["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Nota", "method_name": "settareIdNota", "params": ["int"]}, "ManagerRegistrati.aggiornareNota(Nota)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Nota.ottenereDataNota()", "M"], ["Nota.ottenereInsegnante()", "M"], ["DBConnessione.ottenereConnesione()", "S"], ["Nota.ottenereDescrizione()", "M"], ["Nota.ottenereAnnoAccademico()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(Date)", "S"], ["Nota.ottenereIdUtente()", "M"], ["Utility.eNull(String)", "S"], ["Nota.ottenereIdNota()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "aggiornareNota", "params": ["Nota"]}, "ServletMostraDettagliNota.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraDettagliNota.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraDettagliNota", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoGiustificato.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoGiustificato", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eDirettore(Utente)": {"calls": [], "called_by": [["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eDirettore", "params": ["Utente"]}, "ManagerUtente.ottenereUtentePerId(int)": {"calls": [], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereUtentePerId", "params": ["int"]}, "ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIDUtenteEAnnoAccademico", "params": ["int", "int"]}, "ServletMostraElencoGiustificato.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoGiustificato.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoGiustificato", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoNote.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoNote", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)": {"calls": [["ManagerRegistrati.loadNoteFromRs(ResultSet)", "O"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereNotaPerIDUtenteEAnnoAccademico", "params": ["int", "int"]}, "ServletMostraElencoNote.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoNote.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoNote", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraLaGestioneDellaClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraLaGestioneDellaClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaGestioneDellaClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraLaGestioneDellaClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraLaGestioneDellaClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["ManagerUtente.ottenereHighlightsStudenteNota(Integer)", "M"], ["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereAnnoAccademicoElenco()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerUtente.ottenereHighlightsStudenteAssenza(Integer)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletStatisticheDiCalcolo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletStatisticheDiCalcolo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereAnnoAccademicoElenco()": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["ManagerClasse.loadIntegersFromRs(ResultSet)", "O"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereAnnoAccademicoElenco", "params": []}, "ManagerUtente.ottenereHighlightsStudenteAssenza(Integer)": {"calls": [], "called_by": [["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereHighlightsStudenteAssenza", "params": ["Integer"]}, "ManagerUtente.ottenereHighlightsStudenteNota(Integer)": {"calls": [], "called_by": [["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereHighlightsStudenteNota", "params": ["Integer"]}, "ServletStatisticheDiCalcolo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletStatisticheDiCalcolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletStatisticheDiCalcolo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletVisualizzaDettagliGiustifica.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletVisualizzaDettagliGiustifica", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "O"]], "called_by": [["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereGiustificarePerIdGiustificare", "params": ["int"]}, "ServletVisualizzaDettagliGiustifica.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletVisualizzaDettagliGiustifica.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletVisualizzaDettagliGiustifica", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"], ["Utility.String2Date(String)", "S"]], "called_by": [["ServletVisualizzaRegistrati.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletVisualizzaRegistrati", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletVisualizzaRegistrati.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletVisualizzaRegistrati.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletVisualizzaRegistrati", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletCancellaPagella.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletCancellaPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereIstanza()": {"calls": [], "called_by": [["UtenteTest.main(String[])", "S"], ["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "ManagerVoto", "method_name": "ottenereIstanza", "params": []}, "ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "eliminareVotoPerUtenteIdAnnoTurno", "params": ["int", "int", "int"]}, "ServletCancellaPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletCancellaPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletCancellaPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["Classe.ottenereIdIndirizzo()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletCaricareElencoDiInsegnamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletCaricareElencoDiInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Classe.ottenereIdIndirizzo()": {"calls": [], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.esiste(Classe)", "M"], ["ManagerClasse.inserire(Classe)", "M"], ["ManagerClasse.aggiornare(Classe)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Classe", "method_name": "ottenereIdIndirizzo", "params": []}, "ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerClasseId", "params": ["int"]}, "ServletCaricareElencoDiInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletCaricareElencoDiInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletCaricareElencoDiInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Classe.ottenereIdIndirizzo()", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletCaricoPagella.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletCaricoPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerVoto.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerUtenteIdAnnoTurno", "params": ["int", "int", "int"]}, "ServletCaricoPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletCaricoPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletCaricoPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Voto.settareLaboratorio(int)", "M"], ["Voto.settareInsegnamento(int)", "M"], ["ManagerVoto.inserire(Voto)", "M"], ["Insegnamento.ottenereId()", "M"], ["Voto.settareAnnoAccademico(int)", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "M"], ["Voto.settareTurno(int)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["Voto.settareScritto(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["Classe.ottenereIdIndirizzo()", "M"], ["Voto.settareId_utente(int)", "M"], ["Voto.settareOrale(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletInserirePagella.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserirePagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Insegnamento.ottenereId()": {"calls": [], "called_by": [["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "M"], ["ManagerInsegnamento.eliminare(Insegnamento)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerInsegnamento.avereInsegnante(Insegnamento)", "M"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "M"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Insegnamento", "method_name": "ottenereId", "params": []}, "Voto.settareAnnoAccademico(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareAnnoAccademico", "params": ["int"]}, "Voto.settareId_utente(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareId_utente", "params": ["int"]}, "Voto.settareLaboratorio(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareLaboratorio", "params": ["int"]}, "Voto.settareOrale(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareOrale", "params": ["int"]}, "Voto.settareInsegnamento(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareInsegnamento", "params": ["int"]}, "Voto.settareTurno(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareTurno", "params": ["int"]}, "Voto.settareScritto(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Voto", "method_name": "settareScritto", "params": ["int"]}, "ManagerVoto.inserire(Voto)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["Voto.ottenereId_utente()", "M"], ["Utility.eNull(Integer)", "S"], ["Voto.ottenereInsegnamento()", "M"], ["Voto.ottenereLaboratorio()", "M"], ["Voto.ottenereOrale()", "M"], ["Voto.ottenereAnnoAccademico()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Voto.ottenereTurno()", "M"], ["Voto.settareId_voti(int)", "M"], ["Voto.ottenereScritto()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "inserire", "params": ["Voto"]}, "ServletInserirePagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserirePagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserirePagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerUtente.ottenereStudentePerClasseId(int)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraGliStudentiPerClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraGliStudentiPerClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereStudentePerClasseId(int)": {"calls": [], "called_by": [["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereStudentePerClasseId", "params": ["int"]}, "ServletMostraGliStudentiPerClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraGliStudentiPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraGliStudentiPerClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraLaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraLaClassePerAnnoAccademico", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraLaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraLaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraLaClassePerAnnoAccademico", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["VoceElencoUtenti.settareNome(String)", "M"], ["Utente.ottenereEMail()", "M"], ["Utente.ottenereId()", "M"], ["VoceElencoUtenti.settareEMail(String)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["Utente.ottenereNome()", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["VoceElencoUtenti.settareId(int)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraPagella.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraPagella", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.ottenereNome()": {"calls": [], "called_by": [["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "ottenereNome", "params": []}, "VoceElencoUtenti.settareNome(String)": {"calls": [], "called_by": [["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "VoceElencoUtenti", "method_name": "settareNome", "params": ["String"]}, "Utente.ottenereEMail()": {"calls": [], "called_by": [["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "ottenereEMail", "params": []}, "VoceElencoUtenti.settareEMail(String)": {"calls": [], "called_by": [["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "VoceElencoUtenti", "method_name": "settareEMail", "params": ["String"]}, "VoceElencoUtenti.settareId(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "VoceElencoUtenti", "method_name": "settareId", "params": ["int"]}, "ServletMostraPagella.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraPagella.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraPagella", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Voto.settareLaboratorio(int)", "M"], ["ManagerVoto.eliminare(Voto)", "M"], ["Voto.settareInsegnamento(int)", "M"], ["ManagerVoto.inserire(Voto)", "M"], ["Insegnamento.ottenereId()", "M"], ["Voto.settareAnnoAccademico(int)", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "M"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "M"], ["Voto.settareTurno(int)", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["ManagerVoto.ottenereVotoPerId(int)", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["Voto.settareScritto(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["Classe.ottenereIdIndirizzo()", "M"], ["Voto.settareId_utente(int)", "M"], ["Voto.settareOrale(int)", "M"], ["ManagerVoto.aggiornare(Voto)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletPagellaDiAggiornamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletPagellaDiAggiornamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Insegnamento.ottenereId()", "M"], ["Voto.ottenereId_voti()", "M"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["VoceElencoUtenti.ottenereId()", "M"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "O"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "ottenereIdVoto", "params": ["Insegnamento", "int", "int", "VoceElencoUtenti"]}, "ManagerVoto.ottenereVotoPerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerVoto.loadRecordFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerId", "params": ["int"]}, "ManagerVoto.aggiornare(Voto)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Voto.ottenereId_utente()", "M"], ["Voto.ottenereId_voti()", "M"], ["Voto.ottenereInsegnamento()", "M"], ["Voto.ottenereLaboratorio()", "M"], ["Voto.ottenereOrale()", "M"], ["Voto.ottenereAnnoAccademico()", "M"], ["DBConnessione.ottenereConnesione()", "S"], ["Voto.ottenereTurno()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Voto.ottenereScritto()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "aggiornare", "params": ["Voto"]}, "ManagerVoto.eliminare(Voto)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Voto.ottenereId_voti()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerVoto", "method_name": "eliminare", "params": ["Voto"]}, "ServletPagellaDiAggiornamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletPagellaDiAggiornamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletPagellaDiAggiornamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInizializzazione.init(ServletConfig)": {"calls": [["Utility.settareServerSmtp(String)", "S"], ["Utility.settarePoolTimeout(int)", "S"], ["Utility.settarePassword(String)", "S"], ["Utility.settareTestoAPieDiPagina(String)", "S"], ["Utility.settareCompletoPathDatabase(String)", "S"], ["Utility.settareDimensioneMassimaPool(int)", "S"], ["Utility.settareAttivoTimeout(int)", "S"], ["Utility.settareUtenteNome(String)", "S"], ["Utility.settareDriverMySql(String)", "S"], ["Utility.settareAspettareTimeout(int)", "S"]], "called_by": [], "class_name": "ServletInizializzazione", "method_name": "init", "params": ["ServletConfig"]}, "Utility.settareServerSmtp(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareServerSmtp", "params": ["String"]}, "Utility.settareDriverMySql(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareDriverMySql", "params": ["String"]}, "Utility.settareCompletoPathDatabase(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareCompletoPathDatabase", "params": ["String"]}, "Utility.settareUtenteNome(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareUtenteNome", "params": ["String"]}, "Utility.settarePassword(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settarePassword", "params": ["String"]}, "Utility.settareDimensioneMassimaPool(int)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareDimensioneMassimaPool", "params": ["int"]}, "Utility.settareAspettareTimeout(int)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareAspettareTimeout", "params": ["int"]}, "Utility.settareAttivoTimeout(int)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareAttivoTimeout", "params": ["int"]}, "Utility.settarePoolTimeout(int)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settarePoolTimeout", "params": ["int"]}, "Utility.settareTestoAPieDiPagina(String)": {"calls": [], "called_by": [["ServletInizializzazione.init(ServletConfig)", "S"]], "class_name": "Utility", "method_name": "settareTestoAPieDiPagina", "params": ["String"]}, "ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Insegnamento.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["Insegnamento.settareId(int)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["Insegnamento.settareNome(String)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "M"], ["ManagerInsegnamento.esiste(Insegnamento)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletAggiornamentoInsegnamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiornamentoInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Insegnamento.settareNome(String)": {"calls": [], "called_by": [["ManagerInsegnamento.loadRecordFromRs(ResultSet)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Insegnamento", "method_name": "settareNome", "params": ["String"]}, "Insegnamento.settareId(int)": {"calls": [], "called_by": [["UtenteTest.main(String[])", "M"], ["ManagerInsegnamento.loadRecordFromRs(ResultSet)", "M"], ["ManagerInsegnamento.inserire(Insegnamento)", "M"], ["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Insegnamento", "method_name": "settareId", "params": ["int"]}, "ManagerInsegnamento.esiste(Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Insegnamento.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "esiste", "params": ["Insegnamento"]}, "ManagerInsegnamento.aggiornare(Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Insegnamento.ottenereId()", "M"], ["Insegnamento.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "aggiornare", "params": ["Insegnamento"]}, "ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Insegnamento.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoId", "params": ["Insegnamento"]}, "ServletAggiornamentoInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiornamentoInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiornamentoInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.eliminare(Insegnamento)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaInsegnamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.eliminare(Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Insegnamento.ottenereId()", "M"], ["Utility.eNull(Integer)", "S"]], "called_by": [["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "eliminare", "params": ["Insegnamento"]}, "ServletEliminaInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "M"], ["ManagerInsegnamento.esiste(Insegnamento)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["Insegnamento.settareNome(String)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletInserireInsegnamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserireInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerInsegnamento.inserire(Insegnamento)": {"calls": [["Insegnamento.settareId(int)", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Insegnamento.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerInsegnamento", "method_name": "inserire", "params": ["Insegnamento"]}, "ServletInserireInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserireInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserireInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraDettagliInsegnamento.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraDettagliInsegnamento", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliInsegnamento.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraDettagliInsegnamento.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraDettagliInsegnamento", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerInsegnamento.ottenereInsegnamenti()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.ottenereUtentePerLogin(String)", "M"], ["ManagerUtente.eStudente(Utente)", "M"], ["ManagerUtente.eInsegnante(Utente)", "M"], ["ManagerUtente.eGenitore(Utente)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ManagerUtente.login(String,String)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["LoginEccezione.getMessage()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["LoginEccezione.printStackTrace()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["ManagerUtente.eAtaPersone(Utente)", "M"]], "called_by": [["ServletAccesso.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAccesso", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereUtentePerLogin(String)": {"calls": [], "called_by": [["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereUtentePerLogin", "params": ["String"]}, "ManagerUtente.login(String,String)": {"calls": [], "called_by": [["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "login", "params": ["String", "String"]}, "ManagerUtente.eInsegnante(Utente)": {"calls": [], "called_by": [["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "M"]], "class_name": "ManagerUtente", "method_name": "eInsegnante", "params": ["Utente"]}, "ManagerUtente.eStudente(Utente)": {"calls": [], "called_by": [["ManagerClasse.ottenereClassePerStudente(Utente)", "M"], ["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eStudente", "params": ["Utente"]}, "ManagerUtente.eGenitore(Utente)": {"calls": [], "called_by": [["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eGenitore", "params": ["Utente"]}, "ManagerUtente.eAtaPersone(Utente)": {"calls": [], "called_by": [["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eAtaPersone", "params": ["Utente"]}, "LoginEccezione.getMessage()": {"calls": [], "called_by": [["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "LoginEccezione", "method_name": "getMessage", "params": []}, "LoginEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "LoginEccezione", "method_name": "printStackTrace", "params": []}, "ServletAccesso.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAccesso.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAccesso", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Utente.settareCell(String)", "M"], ["Utente.settareNomeDiBattesimo(String)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["Utente.settareCognome(String)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Utente.settareEMail(String)", "M"], ["Utente.settarePassword(String)", "M"], ["ManagerUtente.aggiornare(Utente)", "M"], ["Utente.ottenereId()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereUtenteId(Utente)", "M"], ["ManagerUtente.esiste(Utente)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ManagerUtente.esisteLogin(Utente)", "M"], ["Utente.settareLogin(String)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletAggiornamentoUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiornamentoUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utente.settareNomeDiBattesimo(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settareNomeDiBattesimo", "params": ["String"]}, "Utente.settareCognome(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settareCognome", "params": ["String"]}, "Utente.settareCell(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settareCell", "params": ["String"]}, "Utente.settareLogin(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settareLogin", "params": ["String"]}, "ManagerUtente.esisteLogin(Utente)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "esisteLogin", "params": ["Utente"]}, "Utente.settarePassword(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settarePassword", "params": ["String"]}, "Utente.settareEMail(String)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "Utente", "method_name": "settareEMail", "params": ["String"]}, "ManagerUtente.esiste(Utente)": {"calls": [], "called_by": [["ManagerClasse.ottenereClassePerStudente(Utente)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "esiste", "params": ["Utente"]}, "ManagerUtente.aggiornare(Utente)": {"calls": [], "called_by": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "aggiornare", "params": ["Utente"]}, "ManagerUtente.ottenereUtenteId(Utente)": {"calls": [], "called_by": [["ManagerClasse.ottenereClassePerStudente(Utente)", "M"], ["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereUtenteId", "params": ["Utente"]}, "ServletAggiornamentoUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiornamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiornamentoUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["Utente.ottenereId()", "M"], ["ManagerUtente.assegnareInsegnanteInClasseInsegnamento(Utente,int,int)", "M"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletAggiungereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAggiungereInsegnamentoComeDocente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)": {"calls": [], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "avereInsegnamento", "params": ["Utente", "Insegnamento", "Classe"]}, "ManagerUtente.assegnareInsegnanteInClasseInsegnamento(Utente,int,int)": {"calls": [], "called_by": [["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "assegnareInsegnanteInClasseInsegnamento", "params": ["Utente", "int", "int"]}, "ServletAggiungereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAggiungereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAggiungereInsegnamentoComeDocente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Utente.ottenereId()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereUtenteId(Utente)", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"], ["ManagerUtente.esiste(Utente)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.esisteLogin(Utente)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["Utente.settarePassword(String)", "M"], ["ManagerUtente.aggiornare(Utente)", "M"]], "called_by": [["ServletAlteraIDatiPersonali.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAlteraIDatiPersonali", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAlteraIDatiPersonali.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAlteraIDatiPersonali.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAlteraIDatiPersonali", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.eliminareRuolo(Utente,int)", "M"], ["ManagerUtente.ottenereAmministratori()", "M"], ["EliminaManagerEccezione.getMessage()", "M"], ["ManagerUtente.assegnareRuolo(Utente,int)", "M"], ["EliminaManagerEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletAssegnaRuolo.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAssegnaRuolo", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereAmministratori()": {"calls": [], "called_by": [["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereAmministratori", "params": []}, "ManagerUtente.assegnareRuolo(Utente,int)": {"calls": [], "called_by": [["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "assegnareRuolo", "params": ["Utente", "int"]}, "ManagerUtente.eliminareRuolo(Utente,int)": {"calls": [], "called_by": [["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eliminareRuolo", "params": ["Utente", "int"]}, "EliminaManagerEccezione.getMessage()": {"calls": [], "called_by": [["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EliminaManagerEccezione", "method_name": "getMessage", "params": []}, "EliminaManagerEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EliminaManagerEccezione", "method_name": "printStackTrace", "params": []}, "ServletAssegnaRuolo.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAssegnaRuolo.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAssegnaRuolo", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["ManagerUtente.ottenereStudenti()", "M"], ["EntitaNonTrovataEccezione.getMessage()", "M"], ["Utente.ottenereId()", "M"], ["ManagerUtente.eliminareGenitore(Utente)", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerUtente.assegnareGenitore(Utente,int)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletAssegnaStudenteGenitore.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAssegnaStudenteGenitore", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereStudenti()": {"calls": [], "called_by": [["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereStudenti", "params": []}, "ManagerUtente.assegnareGenitore(Utente,int)": {"calls": [], "called_by": [["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "assegnareGenitore", "params": ["Utente", "int"]}, "ManagerUtente.eliminareGenitore(Utente)": {"calls": [], "called_by": [["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eliminareGenitore", "params": ["Utente"]}, "ServletAssegnaStudenteGenitore.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAssegnaStudenteGenitore.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAssegnaStudenteGenitore", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.eliminareStudenteClasse(Utente,int)", "M"], ["ManagerUtente.assegnareStudenteClasse(Utente,int)", "M"], ["ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "M"], ["Classe.ottenereIdClasse()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletAssegnaStudentiInClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletAssegnaStudentiInClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)": {"calls": [["ManagerClasse.ottenereClassePerStudente(Utente)", "M"], ["Classe.ottenereAnnoAccademico()", "M"], ["ManagerClasse.ottenereIstanza()", "S"]], "called_by": [["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerUtenteAnnoAccademico", "params": ["Utente", "int"]}, "ManagerUtente.eliminareStudenteClasse(Utente,int)": {"calls": [], "called_by": [["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"], ["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eliminareStudenteClasse", "params": ["Utente", "int"]}, "ManagerUtente.assegnareStudenteClasse(Utente,int)": {"calls": [], "called_by": [["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "assegnareStudenteClasse", "params": ["Utente", "int"]}, "ServletAssegnaStudentiInClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletAssegnaStudentiInClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletAssegnaStudentiInClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletCaricaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletCaricaClassePerAnnoAccademico", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricaClassePerAnnoAccademico.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletCaricaClassePerAnnoAccademico.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletCaricaClassePerAnnoAccademico", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereAnnoAccademicoElenco()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletCaricoAnno.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletCaricoAnno", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletCaricoAnno.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletCaricoAnno.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletCaricoAnno", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletDisconnettersi.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletDisconnettersi.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletDisconnettersi", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletDisconnettersi.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [], "called_by": [["ServletDisconnettersi.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletDisconnettersi", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.ottenereAmministratori()", "M"], ["EliminaAmministratoreEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["EliminaAmministratoreEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.eliminare(Utente)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletEliminaUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletEliminaUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eliminare(Utente)": {"calls": [], "called_by": [["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eliminare", "params": ["Utente"]}, "EliminaAmministratoreEccezione.getMessage()": {"calls": [], "called_by": [["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EliminaAmministratoreEccezione", "method_name": "getMessage", "params": []}, "EliminaAmministratoreEccezione.printStackTrace()": {"calls": [], "called_by": [["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "EliminaAmministratoreEccezione", "method_name": "printStackTrace", "params": []}, "ServletEliminaUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletEliminaUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletEliminaUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Utente.settareCell(String)", "M"], ["Utente.settareNomeDiBattesimo(String)", "M"], ["LoginEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["Utente.settareCognome(String)", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerUtente.inserire(Utente)", "M"], ["Utente.settareEMail(String)", "M"], ["Utente.settarePassword(String)", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerUtente.esiste(Utente)", "M"], ["EntitaDuplicataEccezione.printStackTrace()", "M"], ["ManagerUtente.esisteLogin(Utente)", "M"], ["LoginEccezione.getMessage()", "M"], ["Utente.settareLogin(String)", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaDuplicataEccezione.getMessage()", "M"]], "called_by": [["ServletInserisciUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletInserisciUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.inserire(Utente)": {"calls": [], "called_by": [["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "inserire", "params": ["Utente"]}, "ServletInserisciUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletInserisciUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletInserisciUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraDettagliUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraDettagliUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraDettagliUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraDettagliUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraDettagliUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtenteElenco()", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraElencoUtenti.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraElencoUtenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.ottenereUtenteElenco()": {"calls": [], "called_by": [["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "ottenereUtenteElenco", "params": []}, "ServletMostraElencoUtenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraElencoUtenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraElencoUtenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraInsegnanteModuloPerClasse.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraInsegnanteModuloPerClasse", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraInsegnanteModuloPerClasse.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraInsegnanteModuloPerClasse.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraInsegnanteModuloPerClasse", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerUtente.eInsegnante(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["CampoObbligatorioEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletMostraModuloDiInsegnamentoUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraModuloDiInsegnamentoUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerInsegnante(Utente)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["ManagerUtente.ottenereUtenteId(Utente)", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["ManagerUtente.eInsegnante(Utente)", "M"], ["ManagerUtente.esiste(Utente)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerClasse.loadRecordsFromRs(ResultSet)", "O"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerInsegnante", "params": ["Utente"]}, "ServletMostraModuloDiInsegnamentoUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraModuloDiInsegnamentoUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraModuloDiInsegnamentoUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["Utility.BooleanToInt(boolean)", "S"], ["ManagerUtente.eStudente(Utente)", "M"], ["ManagerUtente.eInsegnante(Utente)", "M"], ["ManagerUtente.eGenitore(Utente)", "M"], ["ManagerUtente.eDirettore(Utente)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"], ["ManagerUtente.eAtaPersone(Utente)", "M"]], "called_by": [["ServletMostraModuloRuoloUtente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletMostraModuloRuoloUtente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Utility.BooleanToInt(boolean)": {"calls": [], "called_by": [["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "S"]], "class_name": "Utility", "method_name": "BooleanToInt", "params": ["boolean"]}, "ServletMostraModuloRuoloUtente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletMostraModuloRuoloUtente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletMostraModuloRuoloUtente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["CampoObbligatorioEccezione.printStackTrace()", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletRapportoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletRapportoInsegnamenti", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerClasse.loadRecordsFromRs(ResultSet)", "O"], ["Utente.ottenereId()", "M"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerInsegnanteAnnoAccademico", "params": ["Utente", "int"]}, "ServletRapportoInsegnamenti.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletRapportoInsegnamenti.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletRapportoInsegnamenti", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerClasse.ottenereClassePerID(int)", "M"], ["Utente.ottenereId()", "M"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "M"], ["ManagerInsegnamento.ottenereIstanza()", "S"], ["ManagerUtente.avereInsegnamento(Utente,Insegnamento,Classe)", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerUtente.ottenereUtentePerId(int)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ConnessioneEccezione.getMessage()", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ManagerUtente.eliminareInsegnanteInClasseInsegnamento(Utente,int,int)", "M"]], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletRimuovereInsegnamentoComeDocente", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ManagerUtente.eliminareInsegnanteInClasseInsegnamento(Utente,int,int)": {"calls": [], "called_by": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ManagerUtente", "method_name": "eliminareInsegnanteInClasseInsegnamento", "params": ["Utente", "int", "int"]}, "ServletRimuovereInsegnamentoComeDocente.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletRimuovereInsegnamentoComeDocente.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletRimuovereInsegnamentoComeDocente", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)": {"calls": [["EntitaNonTrovataEccezione.getMessage()", "M"], ["ManagerUtente.eliminareStudenteClasse(Utente,int)", "M"], ["ValoreNonValidoEccezione.getMessage()", "M"], ["Utente.ottenereId()", "M"], ["Classe.ottenereIdClasse()", "M"], ["VoceElencoUtenti.ottenereId()", "M"], ["ConnessioneEccezione.printStackTrace()", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ValoreNonValidoEccezione.printStackTrace()", "M"], ["ManagerUtente.eAmministratore(Utente)", "M"], ["ManagerClasse.ottenereIstanza()", "S"], ["ManagerUtente.ottenereStudentePerClasseId(int)", "M"], ["EntitaNonTrovataEccezione.printStackTrace()", "M"], ["ConnessioneEccezione.getMessage()", "M"]], "called_by": [["ServletRimuoviLaStanzaDellaClasseStudentesca.doPost(HttpServletRequest,HttpServletResponse)", "M"]], "class_name": "ServletRimuoviLaStanzaDellaClasseStudentesca", "method_name": "doGet", "params": ["HttpServletRequest", "HttpServletResponse"]}, "ServletRimuoviLaStanzaDellaClasseStudentesca.doPost(HttpServletRequest,HttpServletResponse)": {"calls": [["ServletRimuoviLaStanzaDellaClasseStudentesca.doGet(HttpServletRequest,HttpServletResponse)", "M"]], "called_by": [], "class_name": "ServletRimuoviLaStanzaDellaClasseStudentesca", "method_name": "doPost", "params": ["HttpServletRequest", "HttpServletResponse"]}, "Pagella.ToString()": {"calls": [["Voto.toString()", "M"]], "called_by": [], "class_name": "Pagella", "method_name": "ToString", "params": []}, "Voto.toString()": {"calls": [], "called_by": [["Pagella.ToString()", "M"]], "class_name": "Voto", "method_name": "toString", "params": []}, "Utente.toString()": {"calls": [["Utente.ottenereNomeDiBattesimo()", "M"], ["Utente.ottenereCognome()", "M"]], "called_by": [], "class_name": "Utente", "method_name": "toString", "params": []}, "Utente.ottenereNomeDiBattesimo()": {"calls": [], "called_by": [["Utente.toString()", "M"]], "class_name": "Utente", "method_name": "ottenereNomeDiBattesimo", "params": []}, "Utente.ottenereCognome()": {"calls": [], "called_by": [["Utente.toString()", "M"]], "class_name": "Utente", "method_name": "ottenereCognome", "params": []}, "ConnessioneWrapper.cachePreparedStatement(PreparedStatement)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [["ConnessioneWrapper.prepareStatement(String,int)", "O"], ["ConnessioneWrapper.prepareStatement(String,int,int,int)", "O"], ["ConnessioneWrapper.prepareStatement(String,String[])", "O"], ["ConnessioneWrapper.prepareStatement(String,int,int)", "O"], ["ConnessioneWrapper.prepareStatement(String)", "O"], ["ConnessioneWrapper.prepareStatement(String,int[])", "O"]], "class_name": "ConnessioneWrapper", "method_name": "cachePreparedStatement", "params": ["PreparedStatement"]}, "PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)": {"calls": [], "called_by": [["ConnessioneWrapper.prepareCall(String)", "M"], ["ConnessioneWrapper.createStatement(int,int,int)", "M"], ["ConnessioneWrapper.setAutoCommit(boolean)", "M"], ["ConnessioneWrapper.prepareCall(String,int,int,int)", "M"], ["ConnessioneWrapper.isClosed()", "M"], ["ConnessioneWrapper.getTypeMap()", "M"], ["ConnessioneWrapper.getMetaData()", "M"], ["ConnessioneWrapper.setHoldability(int)", "M"], ["ConnessioneWrapper.commit()", "M"], ["ConnessioneWrapper.getWarnings()", "M"], ["ConnessioneWrapper.rollback()", "M"], ["ConnessioneWrapper.prepareStatement(String,int)", "M"], ["ConnessioneWrapper.rollback(Savepoint)", "M"], ["ConnessioneWrapper.getCatalog()", "M"], ["ConnessioneWrapper.setReadOnly(boolean)", "M"], ["ConnessioneWrapper.setSavepoint()", "M"], ["ConnessioneWrapper.setTransactionIsolation(int)", "M"], ["ConnessioneWrapper.getAutoCommit()", "M"], ["ConnessioneWrapper.prepareStatement(String,int[])", "M"], ["ConnessioneWrapper.setCatalog(String)", "M"], ["ConnessioneWrapper.nativeSQL(String)", "M"], ["ConnessioneWrapper.isReadOnly()", "M"], ["ConnessioneWrapper.setSavepoint(String)", "M"], ["ConnessioneWrapper.createStatement()", "M"], ["ConnessioneWrapper.prepareCall(String,int,int)", "M"], ["ConnessioneWrapper.getHoldability()", "M"], ["ConnessioneWrapper.prepareStatement(String,int,int)", "M"], ["ConnessioneWrapper.getTransactionIsolation()", "M"], ["ConnessioneWrapper.prepareStatement(String,int,int,int)", "M"], ["ConnessioneWrapper.releaseSavepoint(Savepoint)", "M"], ["ConnessioneWrapper.cacheStatement(Statement)", "M"], ["ConnessioneWrapper.createStatement(int,int)", "M"], ["ConnessioneWrapper.prepareStatement(String)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "M"], ["ConnessioneWrapper.prepareStatement(String,String[])", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "settareUltimaVolta", "params": ["Connection"]}, "ConnessioneWrapper.cacheStatement(Statement)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [["ConnessioneWrapper.createStatement(int,int)", "O"], ["ConnessioneWrapper.createStatement(int,int,int)", "O"], ["ConnessioneWrapper.createStatement()", "O"]], "class_name": "ConnessioneWrapper", "method_name": "cacheStatement", "params": ["Statement"]}, "ConnessioneWrapper.close()": {"calls": [["ConnessioneWrapper.closeAndReleaseStatements()", "O"], ["PoolDiConnessioneDataSorgente.rilasciare(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "close", "params": []}, "ConnessioneWrapper.closeAndReleaseStatements()": {"calls": [], "called_by": [["ConnessioneWrapper.chiudereConnessioneAvvolta()", "O"], ["ConnessioneWrapper.close()", "O"]], "class_name": "ConnessioneWrapper", "method_name": "closeAndReleaseStatements", "params": []}, "PoolDiConnessioneDataSorgente.rilasciare(Connection)": {"calls": [], "called_by": [["ConnessioneWrapper.close()", "M"], ["DBConnessione.rilasciareConnessione(Connection)", "M"], ["PoolDiConnessioneDataSorgente.clearActive()", "M"], ["ControlloConnessione.run()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "rilasciare", "params": ["Connection"]}, "ConnessioneWrapper.chiudereConnessioneAvvolta()": {"calls": [["ConnessioneWrapper.closeAndReleaseStatements()", "O"]], "called_by": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)", "M"], ["ConnessioneWrapper.finalize()", "M"]], "class_name": "ConnessioneWrapper", "method_name": "chiudereConnessioneAvvolta", "params": []}, "ConnessioneWrapper.commit()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "commit", "params": []}, "ConnessioneWrapper.createStatement()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cacheStatement(Statement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": []}, "ConnessioneWrapper.createStatement(int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cacheStatement(Statement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": ["int", "int"]}, "ConnessioneWrapper.createStatement(int,int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cacheStatement(Statement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "createStatement", "params": ["int", "int", "int"]}, "ConnessioneWrapper.finalize()": {"calls": [["ConnessioneWrapper.chiudereConnessioneAvvolta()", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "finalize", "params": []}, "ConnessioneWrapper.getAutoCommit()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getAutoCommit", "params": []}, "ConnessioneWrapper.getCatalog()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getCatalog", "params": []}, "ConnessioneWrapper.getHoldability()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getHoldability", "params": []}, "ConnessioneWrapper.getMetaData()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getMetaData", "params": []}, "ConnessioneWrapper.getTransactionIsolation()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getTransactionIsolation", "params": []}, "ConnessioneWrapper.getTypeMap()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getTypeMap", "params": []}, "ConnessioneWrapper.getWarnings()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "getWarnings", "params": []}, "ConnessioneWrapper.isClosed()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "isClosed", "params": []}, "ConnessioneWrapper.isReadOnly()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "isReadOnly", "params": []}, "ConnessioneWrapper.nativeSQL(String)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "nativeSQL", "params": ["String"]}, "ConnessioneWrapper.prepareCall(String)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String"]}, "ConnessioneWrapper.prepareCall(String,int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String", "int", "int"]}, "ConnessioneWrapper.prepareCall(String,int,int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareCall", "params": ["String", "int", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String"]}, "ConnessioneWrapper.prepareStatement(String,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int"]}, "ConnessioneWrapper.prepareStatement(String,int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String,int,int,int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int", "int", "int"]}, "ConnessioneWrapper.prepareStatement(String,int[])": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "int[]"]}, "ConnessioneWrapper.prepareStatement(String,String[])": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"], ["ConnessioneWrapper.cachePreparedStatement(PreparedStatement)", "O"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "prepareStatement", "params": ["String", "String[]"]}, "ConnessioneWrapper.releaseSavepoint(Savepoint)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "releaseSavepoint", "params": ["Savepoint"]}, "ConnessioneWrapper.rollback()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "rollback", "params": []}, "ConnessioneWrapper.rollback(Savepoint)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "rollback", "params": ["Savepoint"]}, "ConnessioneWrapper.setAutoCommit(boolean)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setAutoCommit", "params": ["boolean"]}, "ConnessioneWrapper.setCatalog(String)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setCatalog", "params": ["String"]}, "ConnessioneWrapper.setHoldability(int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setHoldability", "params": ["int"]}, "ConnessioneWrapper.setReadOnly(boolean)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setReadOnly", "params": ["boolean"]}, "ConnessioneWrapper.setSavepoint()": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setSavepoint", "params": []}, "ConnessioneWrapper.setSavepoint(String)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setSavepoint", "params": ["String"]}, "ConnessioneWrapper.setTransactionIsolation(int)": {"calls": [["PoolDiConnessioneDataSorgente.settareUltimaVolta(Connection)", "M"]], "called_by": [], "class_name": "ConnessioneWrapper", "method_name": "setTransactionIsolation", "params": ["int"]}, "ControlloConnessione.run()": {"calls": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()", "M"], ["ControlloConnessione.setPriority(int)", "M"], ["PoolDiConnessioneDataSorgente.clearActive()", "M"], ["PoolDiConnessioneDataSorgente.dimensioneAttiva()", "M"], ["PoolDiConnessioneDataSorgente.rilasciare(Connection)", "M"], ["PoolDiConnessioneDataSorgente.getConnection()", "M"]], "called_by": [], "class_name": "ControlloConnessione", "method_name": "run", "params": []}, "PoolDiConnessioneDataSorgente.dimensioneAttiva()": {"calls": [], "called_by": [["PoolDiConnessioneDataSorgente.toString()", "M"], ["ControlloConnessione.run()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "dimensioneAttiva", "params": []}, "ControlloConnessione.setPriority(int)": {"calls": [], "called_by": [["ControlloConnessione.run()", "M"]], "class_name": "ControlloConnessione", "method_name": "setPriority", "params": ["int"]}, "PoolDiConnessioneDataSorgente.clearActive()": {"calls": [["PoolDiConnessioneDataSorgente.rilasciare(Connection)", "M"]], "called_by": [["ControlloConnessione.run()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "clearActive", "params": []}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()": {"calls": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)", "O"]], "called_by": [["ControlloConnessione.run()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioniInPool", "params": []}, "PoolDiConnessioneDataSorgente.getConnection()": {"calls": [["PoolDiConnessioneDataSorgente.createNewConnection()", "O"], ["PoolDiConnessioneDataSorgente.getPooledConnection(int)", "O"]], "called_by": [["DBConnessione.ottenereConnesione()", "M"], ["ControlloConnessione.run()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "getConnection", "params": []}, "DBConnessione.<clinit>()": {"calls": [["Utility.ottenereCompletoPathDatabase()", "S"], ["Utility.ottenereDimensioneMassimaPool()", "S"], ["Utility.ottenereUtenteNome()", "S"], ["Utility.ottenerePoolTimeout()", "S"], ["Ambiente.ottenerePoolPropertiesPath()", "S"], ["Utility.ottenereDriverMySql()", "S"], ["DBConnessione.loadPool()", "S"], ["Utility.ottenereAspettareTimeout()", "S"], ["Utility.ottenereAttivoTimeout()", "S"], ["Utility.ottenerePassword()", "S"]], "called_by": [], "class_name": "DBConnessione", "method_name": "<clinit>", "params": []}, "Ambiente.ottenerePoolPropertiesPath()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Ambiente", "method_name": "ottenerePoolPropertiesPath", "params": []}, "Utility.ottenereDriverMySql()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereDriverMySql", "params": []}, "Utility.ottenereCompletoPathDatabase()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereCompletoPathDatabase", "params": []}, "Utility.ottenereUtenteNome()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereUtenteNome", "params": []}, "Utility.ottenerePassword()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenerePassword", "params": []}, "Utility.ottenereDimensioneMassimaPool()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereDimensioneMassimaPool", "params": []}, "Utility.ottenereAspettareTimeout()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereAspettareTimeout", "params": []}, "Utility.ottenereAttivoTimeout()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenereAttivoTimeout", "params": []}, "Utility.ottenerePoolTimeout()": {"calls": [], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "Utility", "method_name": "ottenerePoolTimeout", "params": []}, "DBConnessione.loadPool()": {"calls": [["ControlloConnessione.start()", "M"], ["PoolDiConnessioneDataSorgente.settareAttivoTimeout(long)", "M"]], "called_by": [["DBConnessione.<clinit>()", "S"]], "class_name": "DBConnessione", "method_name": "loadPool", "params": []}, "DBConnessione.ottenereConnesione()": {"calls": [["PoolDiConnessioneDataSorgente.getConnection()", "M"]], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "S"], ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerVoto.eliminare(Voto)", "S"], ["ManagerClasse.aggiornare(Classe)", "S"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "S"], ["ManagerInsegnamento.eliminare(Insegnamento)", "S"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "S"], ["ManagerIndirizzo.elimina(Indirizzo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerInsegnamento.esiste(Insegnamento)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "S"], ["ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "S"], ["ManagerIndirizzo.esiste(Indirizzo)", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "S"], ["ManagerRegistrati.ottenereRitardoPerId(int)", "S"], ["ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "S"], ["ManagerVoto.aggiornare(Voto)", "S"], ["ManagerVoto.inserire(Voto)", "S"], ["ManagerClasse.ottenereClassePerStudente(Utente)", "S"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "S"], ["ManagerIndirizzo.ottenereIndirizzoElenco()", "S"], ["ManagerIndirizzo.inserire(Indirizzo)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "S"], ["ManagerRegistrati.esiste(Giustificare)", "S"], ["ManagerVoto.ottenereVoto()", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "S"], ["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "S"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "S"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteId(int)", "S"], ["ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["ManagerVoto.ottenereVotoPerId(int)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "S"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "S"], ["ManagerInsegnamento.avereInsegnante(Insegnamento)", "S"], ["ManagerRegistrati.ottenereNotaPerId(int)", "S"], ["ManagerVoto.esiste(Voto)", "S"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "S"], ["ManagerClasse.ottenereClassePerID(int)", "S"], ["ManagerRegistrati.esiste(Ritardo)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "S"], ["ManagerRegistrati.esiste(Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "S"], ["ManagerRegistrati.eliminareNota(Nota)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerClasse.esiste(Classe)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "S"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "S"], ["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerInsegnamento.ottenereInsegnamenti()", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "S"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "S"], ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerClasse.eliminare(Classe)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "S"], ["ManagerClasse.ottenereAnnoAccademicoElenco()", "S"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "DBConnessione", "method_name": "ottenereConnesione", "params": []}, "PoolDiConnessioneDataSorgente.settareAttivoTimeout(long)": {"calls": [], "called_by": [["DBConnessione.loadPool()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "settareAttivoTimeout", "params": ["long"]}, "ControlloConnessione.start()": {"calls": [], "called_by": [["DBConnessione.loadPool()", "M"]], "class_name": "ControlloConnessione", "method_name": "start", "params": []}, "DBConnessione.rilasciareConnessione(Connection)": {"calls": [["PoolDiConnessioneDataSorgente.rilasciare(Connection)", "M"]], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "S"], ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerVoto.eliminare(Voto)", "S"], ["ManagerClasse.aggiornare(Classe)", "S"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "S"], ["ManagerInsegnamento.eliminare(Insegnamento)", "S"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "S"], ["ManagerIndirizzo.elimina(Indirizzo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerInsegnamento.esiste(Insegnamento)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "S"], ["ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "S"], ["ManagerIndirizzo.esiste(Indirizzo)", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "S"], ["ManagerRegistrati.ottenereRitardoPerId(int)", "S"], ["ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "S"], ["ManagerVoto.aggiornare(Voto)", "S"], ["ManagerVoto.inserire(Voto)", "S"], ["ManagerClasse.ottenereClassePerStudente(Utente)", "S"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "S"], ["ManagerIndirizzo.ottenereIndirizzoElenco()", "S"], ["ManagerIndirizzo.inserire(Indirizzo)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "S"], ["ManagerRegistrati.esiste(Giustificare)", "S"], ["ManagerVoto.ottenereVoto()", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "S"], ["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "S"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "S"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteId(int)", "S"], ["ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["ManagerVoto.ottenereVotoPerId(int)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "S"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "S"], ["ManagerInsegnamento.avereInsegnante(Insegnamento)", "S"], ["ManagerRegistrati.ottenereNotaPerId(int)", "S"], ["ManagerVoto.esiste(Voto)", "S"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "S"], ["ManagerClasse.ottenereClassePerID(int)", "S"], ["ManagerRegistrati.esiste(Ritardo)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "S"], ["ManagerRegistrati.esiste(Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "S"], ["ManagerRegistrati.eliminareNota(Nota)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerClasse.esiste(Classe)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "S"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "S"], ["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerInsegnamento.ottenereInsegnamenti()", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "S"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "S"], ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerClasse.eliminare(Classe)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "S"], ["ManagerClasse.ottenereAnnoAccademicoElenco()", "S"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "DBConnessione", "method_name": "rilasciareConnessione", "params": ["Connection"]}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni()": {"calls": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)", "O"]], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioni", "params": []}, "PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)": {"calls": [["ConnessioneWrapper.chiudereConnessioneAvvolta()", "M"]], "called_by": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioniInPool()", "O"], ["PoolDiConnessioneDataSorgente.access$1(PoolDiConnessioneDataSorgente,List)", "O"], ["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni()", "O"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "chiudiTutteLeConnessioni", "params": ["List"]}, "PoolDiConnessioneDataSorgente.getPooledConnection(int)": {"calls": [], "called_by": [["PoolDiConnessioneDataSorgente.getConnection()", "O"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "getPooledConnection", "params": ["int"]}, "PoolDiConnessioneDataSorgente.createNewConnection()": {"calls": [], "called_by": [["PoolDiConnessioneDataSorgente.getConnection()", "O"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "createNewConnection", "params": []}, "PoolDiConnessioneDataSorgente.toString()": {"calls": [["PoolDiConnessioneDataSorgente.dimensioneAttiva()", "M"], ["PoolDiConnessioneDataSorgente.poolDimensione()", "M"]], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "toString", "params": []}, "PoolDiConnessioneDataSorgente.poolDimensione()": {"calls": [], "called_by": [["PoolDiConnessioneDataSorgente.toString()", "M"]], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "poolDimensione", "params": []}, "PoolDiConnessioneDataSorgente.access$1(PoolDiConnessioneDataSorgente,List)": {"calls": [["PoolDiConnessioneDataSorgente.chiudiTutteLeConnessioni(List)", "O"]], "called_by": [], "class_name": "PoolDiConnessioneDataSorgente", "method_name": "access$1", "params": ["PoolDiConnessioneDataSorgente", "List"]}, "Classe.ottenereNome()": {"calls": [], "called_by": [["ManagerClasse.aggiornare(Classe)", "M"], ["ManagerClasse.esiste(Classe)", "M"], ["ManagerClasse.inserire(Classe)", "M"]], "class_name": "Classe", "method_name": "ottenereNome", "params": []}, "Utility.eNull(String)": {"calls": [["Utility.sostituireTuttoStrings(String,String,String)", "S"]], "called_by": [["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "S"], ["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "S"], ["ManagerClasse.aggiornare(Classe)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerClasse.esiste(Classe)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "S"], ["ManagerInsegnamento.esiste(Insegnamento)", "S"], ["ManagerIndirizzo.inserire(Indirizzo)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"], ["ManagerIndirizzo.esiste(Indirizzo)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "Utility", "method_name": "eNull", "params": ["String"]}, "Utility.eNull(Integer)": {"calls": [], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "S"], ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerVoto.eliminare(Voto)", "S"], ["ManagerClasse.aggiornare(Classe)", "S"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "S"], ["ManagerInsegnamento.eliminare(Insegnamento)", "S"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "S"], ["ManagerIndirizzo.elimina(Indirizzo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "S"], ["ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["ManagerRegistrati.ottenereRitardoPerId(int)", "S"], ["ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "S"], ["ManagerVoto.aggiornare(Voto)", "S"], ["ManagerVoto.inserire(Voto)", "S"], ["ManagerClasse.ottenereClassePerStudente(Utente)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"], ["ManagerRegistrati.esiste(Giustificare)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "S"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteId(int)", "S"], ["ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["ManagerVoto.ottenereVotoPerId(int)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "S"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "S"], ["ManagerInsegnamento.avereInsegnante(Insegnamento)", "S"], ["ManagerRegistrati.ottenereNotaPerId(int)", "S"], ["ManagerVoto.esiste(Voto)", "S"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "S"], ["ManagerClasse.ottenereClassePerID(int)", "S"], ["ManagerRegistrati.esiste(Ritardo)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "S"], ["ManagerRegistrati.esiste(Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "S"], ["ManagerRegistrati.eliminareNota(Nota)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerClasse.esiste(Classe)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "S"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "S"], ["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "S"], ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "S"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "S"], ["ManagerClasse.eliminare(Classe)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "S"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "S"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "Utility", "method_name": "eNull", "params": ["Integer"]}, "Utility.queryOperazione(Connection,String)": {"calls": [], "called_by": [["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "S"], ["ManagerInsegnamento.esiste(Insegnamento)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "S"], ["ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["Utility.ottenereValoreMassimo(String,String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "S"], ["ManagerRegistrati.ottenereRitardoPerId(int)", "S"], ["ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)", "S"], ["ManagerClasse.ottenereClassePerStudente(Utente)", "S"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "S"], ["ManagerIndirizzo.ottenereIndirizzoElenco()", "S"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "S"], ["ManagerRegistrati.esiste(Giustificare)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)", "S"], ["ManagerVoto.ottenereVoto()", "S"], ["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "S"], ["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "S"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "S"], ["ManagerVoto.ottenereVotoPerUtenteId(int)", "S"], ["ManagerVoto.ottenereVotoPerId(int)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerInsegnamento.avereInsegnante(Insegnamento)", "S"], ["ManagerVoto.esiste(Voto)", "S"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "S"], ["ManagerClasse.ottenereClassePerID(int)", "S"], ["ManagerRegistrati.esiste(Ritardo)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "S"], ["ManagerRegistrati.esiste(Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "S"], ["ManagerClasse.esiste(Classe)", "S"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "S"], ["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "S"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "S"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "S"], ["ManagerInsegnamento.ottenereInsegnamenti()", "S"], ["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "S"], ["ManagerRegistrati.ottenereNotaPerId(int)", "S"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "S"], ["ManagerClasse.ottenereAnnoAccademicoElenco()", "S"], ["ManagerIndirizzo.esiste(Indirizzo)", "S"]], "class_name": "Utility", "method_name": "queryOperazione", "params": ["Connection", "String"]}, "Utility.eseguireOperazione(Connection,String)": {"calls": [], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "S"], ["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "S"], ["ManagerClasse.aggiornare(Classe)", "S"], ["ManagerInsegnamento.eliminare(Insegnamento)", "S"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "S"], ["ManagerVoto.eliminareVotoPerUtenteIdAnnoTurno(int,int,int)", "S"], ["ManagerIndirizzo.elimina(Indirizzo)", "S"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "S"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerVoto.aggiornare(Voto)", "S"], ["ManagerVoto.inserire(Voto)", "S"], ["ManagerRegistrati.eliminareNota(Nota)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerVoto.eliminare(Voto)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "S"], ["ManagerIndirizzo.inserire(Indirizzo)", "S"], ["ManagerClasse.eliminare(Classe)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "Utility", "method_name": "eseguireOperazione", "params": ["Connection", "String"]}, "Utility.ottenereValoreMassimo(String,String)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerInsegnamento.inserire(Insegnamento)", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerVoto.inserire(Voto)", "S"], ["ManagerIndirizzo.inserire(Indirizzo)", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerClasse.inserire(Classe)", "S"]], "class_name": "Utility", "method_name": "ottenereValoreMassimo", "params": ["String", "String"]}, "Classe.settareIdClasse(int)": {"calls": [], "called_by": [["ManagerClasse.loadRecordFromRs(ResultSet)", "M"], ["ManagerClasse.inserire(Classe)", "M"]], "class_name": "Classe", "method_name": "settareIdClasse", "params": ["int"]}, "ManagerClasse.aggiornare(Classe)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Classe.ottenereAnnoAccademico()", "M"], ["Classe.ottenereIdClasse()", "M"], ["Utility.eNull(Integer)", "S"], ["Classe.ottenereIdIndirizzo()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Utility.eNull(String)", "S"], ["Classe.ottenereNome()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerClasse", "method_name": "aggiornare", "params": ["Classe"]}, "ManagerClasse.ottenereClassePerStudente(Utente)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["ManagerUtente.ottenereUtenteId(Utente)", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["ManagerUtente.eStudente(Utente)", "M"], ["ManagerUtente.esiste(Utente)", "M"], ["ManagerUtente.ottenereIstanza()", "S"], ["ManagerClasse.loadRecordsFromRs(ResultSet)", "O"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerClasse.ottenereClassePerUtenteAnnoAccademico(Utente,int)", "M"]], "class_name": "ManagerClasse", "method_name": "ottenereClassePerStudente", "params": ["Utente"]}, "ManagerClasse.loadRecordsFromRs(ResultSet)": {"calls": [["ManagerClasse.loadRecordFromRs(ResultSet)", "O"]], "called_by": [["ManagerClasse.ottenereClassePerStudente(Utente)", "O"], ["ManagerClasse.ottenereClassePerInsegnante(Utente)", "O"], ["ManagerClasse.ottenereClassePerInsegnanteAnnoAccademico(Utente,int)", "O"], ["ManagerClasse.ottenereClassePerAnnoAccademico(int)", "O"]], "class_name": "ManagerClasse", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerClasse.loadRecordFromRs(ResultSet)": {"calls": [["Classe.settareIdIndirizzo(int)", "M"], ["Classe.settareIdClasse(int)", "M"], ["Classe.settareNome(String)", "M"], ["Classe.settareAnnoAccademico(int)", "M"]], "called_by": [["ManagerClasse.ottenereClassePerID(int)", "O"], ["ManagerClasse.loadRecordsFromRs(ResultSet)", "O"]], "class_name": "ManagerClasse", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerClasse.loadIntegersFromRs(ResultSet)": {"calls": [], "called_by": [["ManagerClasse.ottenereAnnoAccademicoElenco()", "O"]], "class_name": "ManagerClasse", "method_name": "loadIntegersFromRs", "params": ["ResultSet"]}, "Indirizzo.ottenereIdIndirizzo()": {"calls": [], "called_by": [["ManagerIndirizzo.assegnareInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ManagerIndirizzo.rimuovereInsegnamentoComeIndirizzo(Indirizzo,Insegnamento)", "M"], ["ManagerIndirizzo.avereInsegnamento(Insegnamento,Indirizzo)", "M"], ["ManagerIndirizzo.elimina(Indirizzo)", "M"]], "class_name": "Indirizzo", "method_name": "ottenereIdIndirizzo", "params": []}, "Indirizzo.ottenereNome()": {"calls": [], "called_by": [["ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)", "M"], ["ManagerIndirizzo.inserire(Indirizzo)", "M"], ["ManagerIndirizzo.esiste(Indirizzo)", "M"]], "class_name": "Indirizzo", "method_name": "ottenereNome", "params": []}, "Indirizzo.settareIdIndirizzo(int)": {"calls": [], "called_by": [["ManagerIndirizzo.loadRecordFromRs(ResultSet)", "M"], ["ManagerIndirizzo.inserire(Indirizzo)", "M"]], "class_name": "Indirizzo", "method_name": "settareIdIndirizzo", "params": ["int"]}, "ManagerIndirizzo.ottenereIndirizzoId(Indirizzo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Indirizzo.ottenereNome()", "M"], ["Utility.eNull(String)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereIndirizzoId", "params": ["Indirizzo"]}, "ManagerIndirizzo.loadRecordFromRs(ResultSet)": {"calls": [["Indirizzo.settareIdIndirizzo(int)", "M"], ["Indirizzo.settareNome(String)", "M"]], "called_by": [["ManagerIndirizzo.loadRecordsFromRs(ResultSet)", "O"], ["ManagerIndirizzo.ottenereIndirizzoPerId(int)", "O"]], "class_name": "ManagerIndirizzo", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerIndirizzo.loadRecordsFromRs(ResultSet)": {"calls": [["ManagerIndirizzo.loadRecordFromRs(ResultSet)", "O"]], "called_by": [["ManagerIndirizzo.ottenereIndirizzoElenco()", "O"]], "class_name": "ManagerIndirizzo", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerIndirizzo.ottenereNomeIndirizzoPerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereNomeIndirizzoPerId", "params": ["int"]}, "ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerIndirizzo.loadIntegersFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerIndirizzo", "method_name": "ottenereInsegnamentiIndirizzo", "params": ["int"]}, "ManagerIndirizzo.loadIntegersFromRs(ResultSet)": {"calls": [], "called_by": [["ManagerIndirizzo.ottenereInsegnamentiIndirizzo(int)", "O"]], "class_name": "ManagerIndirizzo", "method_name": "loadIntegersFromRs", "params": ["ResultSet"]}, "Insegnamento.ottenereNome()": {"calls": [], "called_by": [["ManagerInsegnamento.ottenereInsegnamentoId(Insegnamento)", "M"], ["ManagerInsegnamento.aggiornare(Insegnamento)", "M"], ["ManagerInsegnamento.inserire(Insegnamento)", "M"], ["ManagerInsegnamento.esiste(Insegnamento)", "M"]], "class_name": "Insegnamento", "method_name": "ottenereNome", "params": []}, "ManagerInsegnamento.ottenereInsegnamentoNomePerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentoNomePerId", "params": ["int"]}, "ManagerInsegnamento.loadRecordFromRs(ResultSet)": {"calls": [["Insegnamento.settareNome(String)", "M"], ["Insegnamento.settareId(int)", "M"]], "called_by": [["ManagerInsegnamento.ottenereInsegnamentoPerId(int)", "O"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"]], "class_name": "ManagerInsegnamento", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerInsegnamento.loadRecordsFromRs(ResultSet)": {"calls": [["ManagerInsegnamento.loadRecordFromRs(ResultSet)", "O"]], "called_by": [["ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)", "O"], ["ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)", "O"], ["ManagerInsegnamento.ottenereInsegnamenti()", "O"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)", "O"], ["ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)", "O"], ["ManagerInsegnamento.ottenereInsegnamentiPerClasseId(int)", "O"]], "class_name": "ManagerInsegnamento", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerInsegnamento.ottenereInsegnamentiPerUtenteId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerUtenteId", "params": ["int"]}, "ManagerInsegnamento.ottenereInsegnamentiPerUtenteClasseID(int,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerUtenteClasseID", "params": ["int", "int"]}, "ManagerInsegnamento.avereInsegnante(Insegnamento)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Insegnamento.ottenereId()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "avereInsegnante", "params": ["Insegnamento"]}, "ManagerInsegnamento.ottenereInsegnamentiPerClasseNome(String)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(String)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerClasseNome", "params": ["String"]}, "ManagerInsegnamento.ottenereInsegnamentiPerIdUtenteIdClasse(int,int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["ManagerInsegnamento.loadRecordsFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [], "class_name": "ManagerInsegnamento", "method_name": "ottenereInsegnamentiPerIdUtenteIdClasse", "params": ["int", "int"]}, "Assenza.ottenereIdAssenza()": {"calls": [], "called_by": [["ManagerRegistrati.eliminareAssenza(Assenza)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"], ["ManagerRegistrati.esiste(Assenza)", "M"]], "class_name": "Assenza", "method_name": "ottenereIdAssenza", "params": []}, "ManagerRegistrati.esiste(Ritardo)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Ritardo.ottenereIdRitardo()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "esiste", "params": ["Ritardo"]}, "Ritardo.ottenereIdRitardo()": {"calls": [], "called_by": [["ManagerRegistrati.esiste(Ritardo)", "M"], ["ManagerRegistrati.eliminareRitardo(Ritardo)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "ottenereIdRitardo", "params": []}, "Assenza.ottenereIdUtente()": {"calls": [], "called_by": [["ManagerRegistrati.inserireAssenza(Assenza)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"]], "class_name": "Assenza", "method_name": "ottenereIdUtente", "params": []}, "Assenza.ottenereDataAssenza()": {"calls": [], "called_by": [["ManagerRegistrati.inserireAssenza(Assenza)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"]], "class_name": "Assenza", "method_name": "ottenereDataAssenza", "params": []}, "Utility.eNull(Date)": {"calls": [["Utility.date2SQLString(Date,boolean)", "S"]], "called_by": [["TestRegistrati.main(String[])", "S"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "S"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "S"], ["ManagerRegistrati.aggiornareNota(Nota)", "S"], ["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "S"], ["ManagerRegistrati.inserireNota(Nota)", "S"], ["ManagerRegistrati.inserireAssenza(Assenza)", "S"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "S"], ["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "S"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "S"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "S"]], "class_name": "Utility", "method_name": "eNull", "params": ["Date"]}, "Assenza.ottenereIdGiustificare()": {"calls": [], "called_by": [["ManagerRegistrati.inserireAssenza(Assenza)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"], ["ManagerRegistrati.eliminareAssenza(Assenza)", "M"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "M"], ["ManagerRegistrati.avereGiustificare(Assenza)", "M"]], "class_name": "Assenza", "method_name": "ottenereIdGiustificare", "params": []}, "Assenza.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ManagerRegistrati.inserireAssenza(Assenza)", "M"], ["ManagerRegistrati.aggiornareAssenza(Assenza)", "M"]], "class_name": "Assenza", "method_name": "ottenereAnnoAccademico", "params": []}, "Assenza.settareIdAssenza(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "M"], ["ManagerRegistrati.inserireAssenza(Assenza)", "M"]], "class_name": "Assenza", "method_name": "settareIdAssenza", "params": ["int"]}, "Ritardo.ottenereIdUtente()": {"calls": [], "called_by": [["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "ottenereIdUtente", "params": []}, "Ritardo.ottenereDataRitardo()": {"calls": [], "called_by": [["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "ottenereDataRitardo", "params": []}, "Ritardo.ottenereTempoRitardo()": {"calls": [], "called_by": [["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "ottenereTempoRitardo", "params": []}, "Ritardo.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["ManagerRegistrati.aggiornareRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "ottenereAnnoAccademico", "params": []}, "Ritardo.settareIdRitardo(int)": {"calls": [], "called_by": [["ManagerRegistrati.loadDelayFromRs(ResultSet)", "M"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "M"]], "class_name": "Ritardo", "method_name": "settareIdRitardo", "params": ["int"]}, "Nota.ottenereDescrizione()": {"calls": [], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"]], "class_name": "Nota", "method_name": "ottenereDescrizione", "params": []}, "Nota.ottenereInsegnante()": {"calls": [], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"]], "class_name": "Nota", "method_name": "ottenereInsegnante", "params": []}, "Nota.ottenereIdUtente()": {"calls": [], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"]], "class_name": "Nota", "method_name": "ottenereIdUtente", "params": []}, "Nota.ottenereDataNota()": {"calls": [], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"]], "class_name": "Nota", "method_name": "ottenereDataNota", "params": []}, "Nota.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ManagerRegistrati.inserireNota(Nota)", "M"], ["ManagerRegistrati.aggiornareNota(Nota)", "M"]], "class_name": "Nota", "method_name": "ottenereAnnoAccademico", "params": []}, "Giustificare.ottenereIdUtente()": {"calls": [], "called_by": [["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"]], "class_name": "Giustificare", "method_name": "ottenereIdUtente", "params": []}, "Giustificare.ottenereDataGiustificare()": {"calls": [], "called_by": [["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"]], "class_name": "Giustificare", "method_name": "ottenereDataGiustificare", "params": []}, "Giustificare.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ManagerRegistrati.aggiornareGiustificare(Giustificare)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"]], "class_name": "Giustificare", "method_name": "ottenereAnnoAccademico", "params": []}, "Giustificare.settareIdGiustificare(int)": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "M"]], "class_name": "Giustificare", "method_name": "settareIdGiustificare", "params": ["int"]}, "ManagerRegistrati.aggiornareAssenza(Assenza)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Assenza.ottenereAnnoAccademico()", "M"], ["Utility.eNull(Integer)", "S"], ["Assenza.ottenereDataAssenza()", "M"], ["Utility.eseguireOperazione(Connection,String)", "S"], ["Assenza.ottenereIdGiustificare()", "M"], ["Utility.eNull(Date)", "S"], ["Assenza.ottenereIdAssenza()", "M"], ["Assenza.ottenereIdUtente()", "M"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "M"], ["ManagerRegistrati.inserireGiustificare(Giustificare,Assenza)", "M"]], "class_name": "ManagerRegistrati", "method_name": "aggiornareAssenza", "params": ["Assenza"]}, "ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerRegistrati.eliminareGiustificare(int)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIdGiustificare", "params": ["int"]}, "ManagerRegistrati.loadNoteFromRs(ResultSet)": {"calls": [["Nota.settareInsegnante(String)", "M"], ["Nota.settareAnnoAccademico(int)", "M"], ["Nota.settareIdNota(int)", "M"], ["Nota.settareIdUtente(int)", "M"], ["Nota.settareDataNota(Date)", "M"], ["Nota.settareDescrizione(String)", "M"]], "called_by": [["ManagerRegistrati.ottenereNotaPerIDUtenteEAnnoAccademico(int,int)", "O"], ["ManagerRegistrati.ottenereNotaPerId(int)", "O"]], "class_name": "ManagerRegistrati", "method_name": "loadNoteFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.loadAbsenceFromRs(ResultSet)": {"calls": [["Assenza.settareIdAssenza(int)", "M"], ["Assenza.settareDataAssenza(Date)", "M"], ["Assenza.settareAnnoAccademico(int)", "M"], ["Assenza.settareIdUtente(int)", "M"], ["Assenza.settareIdGiustificare(Integer)", "M"]], "called_by": [["ManagerRegistrati.ottenereAssenzaPerIdAssenza(int)", "O"], ["ManagerRegistrati.ottenereAssenzaPerIdGiustificare(int)", "O"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)", "O"], ["ManagerRegistrati.ottenereAssenzaPerIDUtenteEAnnoAccademico(int,int)", "O"]], "class_name": "ManagerRegistrati", "method_name": "loadAbsenceFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.ottenereRitardoPerId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "ottenereRitardoPerId", "params": ["int"]}, "ManagerRegistrati.loadDelayFromRs(ResultSet)": {"calls": [["Ritardo.settareAnnoAccademico(int)", "M"], ["Ritardo.settareDataRitardo(Date)", "M"], ["Ritardo.settareTempoRitardo(String)", "M"], ["Ritardo.settareIdUtente(int)", "M"], ["Ritardo.settareIdRitardo(int)", "M"]], "called_by": [["ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)", "O"], ["ManagerRegistrati.ottenereRitardoPerId(int)", "O"]], "class_name": "ManagerRegistrati", "method_name": "loadDelayFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.loadJustifyFromRs(ResultSet)": {"calls": [["Giustificare.settareIdUtente(int)", "M"], ["Giustificare.settareIdGiustificare(int)", "M"], ["Giustificare.settareAnnoAccademico(int)", "M"], ["Giustificare.settareDataGiustificare(Date)", "M"]], "called_by": [["ManagerRegistrati.ottenereGiustificarePerIdGiustificare(int)", "O"], ["ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)", "O"]], "class_name": "ManagerRegistrati", "method_name": "loadJustifyFromRs", "params": ["ResultSet"]}, "ManagerRegistrati.avereGiustificare(Assenza)": {"calls": [["Assenza.ottenereIdGiustificare()", "M"], ["ManagerRegistrati.esiste(Assenza)", "M"]], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "avereGiustificare", "params": ["Assenza"]}, "ManagerRegistrati.ottenereGiustificarePerAssenza(Assenza)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Assenza.ottenereIdGiustificare()", "M"], ["ManagerRegistrati.esiste(Assenza)", "M"], ["ManagerRegistrati.loadJustifyFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerRegistrati", "method_name": "ottenereGiustificarePerAssenza", "params": ["Assenza"]}, "ManagerRegistrati.ottenereAssenzaPerIDUtenteEData(int,Date)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Date)", "S"], ["ManagerRegistrati.loadAbsenceFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereAssenzaPerIDUtenteEData", "params": ["int", "Date"]}, "ManagerRegistrati.ottenereRitardoPerIDUtenteEData(int,Date)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerRegistrati.loadDelayFromRs(ResultSet)", "O"], ["Utility.eNull(Date)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"]], "class_name": "ManagerRegistrati", "method_name": "ottenereRitardoPerIDUtenteEData", "params": ["int", "Date"]}, "RegistratiLinea.settareStudente(VoceElencoUtenti)": {"calls": [], "called_by": [["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"]], "class_name": "RegistratiLinea", "method_name": "settareStudente", "params": ["VoceElencoUtenti"]}, "RegistratiLinea.settareAssenza(Assenza)": {"calls": [], "called_by": [["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"]], "class_name": "RegistratiLinea", "method_name": "settareAssenza", "params": ["Assenza"]}, "RegistratiLinea.settareRitardo(Ritardo)": {"calls": [], "called_by": [["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"]], "class_name": "RegistratiLinea", "method_name": "settareRitardo", "params": ["Ritardo"]}, "ManagerVoto.esiste(Voto)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["DBConnessione.ottenereConnesione()", "S"], ["Voto.ottenereId_voti()", "M"], ["Utility.queryOperazione(Connection,String)", "S"], ["Utility.eNull(Integer)", "S"]], "called_by": [], "class_name": "ManagerVoto", "method_name": "esiste", "params": ["Voto"]}, "Voto.ottenereId_voti()": {"calls": [], "called_by": [["ManagerVoto.eliminare(Voto)", "M"], ["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.esiste(Voto)", "M"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "M"]], "class_name": "Voto", "method_name": "ottenereId_voti", "params": []}, "Voto.ottenereId_utente()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereId_utente", "params": []}, "Voto.ottenereInsegnamento()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereInsegnamento", "params": []}, "Voto.ottenereScritto()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereScritto", "params": []}, "Voto.ottenereOrale()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereOrale", "params": []}, "Voto.ottenereLaboratorio()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereLaboratorio", "params": []}, "Voto.ottenereAnnoAccademico()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereAnnoAccademico", "params": []}, "Voto.ottenereTurno()": {"calls": [], "called_by": [["ManagerVoto.aggiornare(Voto)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "ottenereTurno", "params": []}, "Voto.settareId_voti(int)": {"calls": [], "called_by": [["ManagerVoto.loadRecordFromRs(ResultSet)", "M"], ["ManagerVoto.inserire(Voto)", "M"]], "class_name": "Voto", "method_name": "settareId_voti", "params": ["int"]}, "ManagerVoto.loadRecordFromRs(ResultSet)": {"calls": [["Voto.settareId_utente(int)", "M"], ["Voto.settareLaboratorio(int)", "M"], ["Voto.settareOrale(int)", "M"], ["Voto.settareId_voti(int)", "M"], ["Voto.settareInsegnamento(int)", "M"], ["Voto.settareScritto(int)", "M"], ["Voto.settareTurno(int)", "M"], ["Voto.settareAnnoAccademico(int)", "M"]], "called_by": [["ManagerVoto.loadRecordsFromRs(ResultSet)", "O"], ["ManagerVoto.ottenereVotoPerId(int)", "O"], ["ManagerVoto.ottenereIdVoto(Insegnamento,int,int,VoceElencoUtenti)", "O"]], "class_name": "ManagerVoto", "method_name": "loadRecordFromRs", "params": ["ResultSet"]}, "ManagerVoto.ottenereInsegnamentoIdPerVotoId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereInsegnamentoIdPerVotoId", "params": ["int"]}, "ManagerVoto.ottenereVoto()": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerVoto.loadRecordsFromRs(ResultSet)", "O"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereVoto", "params": []}, "ManagerVoto.loadRecordsFromRs(ResultSet)": {"calls": [["ManagerVoto.loadRecordFromRs(ResultSet)", "O"]], "called_by": [["ManagerVoto.ottenereVotoPerUtenteId(int)", "O"], ["ManagerVoto.ottenereVotoPerUtenteIdAnnoTurno(int,int,int)", "O"], ["ManagerVoto.ottenereVoto()", "O"]], "class_name": "ManagerVoto", "method_name": "loadRecordsFromRs", "params": ["ResultSet"]}, "ManagerVoto.ottenereVotoPerUtenteId(int)": {"calls": [["DBConnessione.rilasciareConnessione(Connection)", "S"], ["ManagerVoto.loadRecordsFromRs(ResultSet)", "O"], ["Utility.eNull(Integer)", "S"], ["Utility.queryOperazione(Connection,String)", "S"], ["DBConnessione.ottenereConnesione()", "S"]], "called_by": [], "class_name": "ManagerVoto", "method_name": "ottenereVotoPerUtenteId", "params": ["int"]}, "TestRegistrati.main(String[])": {"calls": [["Giustificare.settareIdGiustificare(int)", "M"], ["ManagerRegistrati.inserireRitardo(Ritardo)", "M"], ["ManagerRegistrati.ottenereIstanza()", "S"], ["Nota.settareDataNota(Date)", "M"], ["Nota.settareDescrizione(String)", "M"], ["Ritardo.settareAnnoAccademico(int)", "M"], ["Giustificare.settareDataGiustificare(Date)", "M"], ["VoceElencoUtenti.ottenereNome()", "M"], ["Ritardo.settareDataRitardo(Date)", "M"], ["Nota.settareInsegnante(String)", "M"], ["Giustificare.settareIdUtente(int)", "M"], ["Ritardo.settareTempoRitardo(String)", "M"], ["ManagerRegistrati.avereRitardo(RegistratiLinea)", "M"], ["Assenza.settareDataAssenza(Date)", "M"], ["Assenza.settareAnnoAccademico(int)", "M"], ["Nota.settareAnnoAccademico(int)", "M"], ["RegistratiLinea.ottenereStudente()", "M"], ["Giustificare.settareAnnoAccademico(int)", "M"], ["ManagerRegistrati.avereAssenza(RegistratiLinea)", "M"], ["Assenza.settareIdUtente(int)", "M"], ["Ritardo.settareIdUtente(int)", "M"], ["Assenza.settareIdGiustificare(Integer)", "M"], ["Utility.eNull(Date)", "S"], ["Nota.settareIdNota(int)", "M"], ["ManagerRegistrati.ottenereRegistratiPerClasseIDEData(int,Date)", "M"], ["Nota.settareIdUtente(int)", "M"]], "called_by": [], "class_name": "TestRegistrati", "method_name": "main", "params": ["String[]"]}, "VoceElencoUtenti.ottenereNome()": {"calls": [], "called_by": [["TestRegistrati.main(String[])", "M"]], "class_name": "VoceElencoUtenti", "method_name": "ottenereNome", "params": []}, "UtenteTest.main(String[])": {"calls": [["Voto.settareLaboratorio(int)", "M"], ["Voto.settareInsegnamento(int)", "M"], ["ManagerVoto.inserire(Voto)", "M"], ["Voto.settareScritto(int)", "M"], ["Voto.settareAnnoAccademico(int)", "M"], ["Voto.settareId_utente(int)", "M"], ["Insegnamento.settareId(int)", "M"], ["Voto.settareOrale(int)", "M"], ["Voto.settareTurno(int)", "M"], ["ManagerVoto.ottenereIstanza()", "S"], ["VoceElencoUtenti.settareId(int)", "M"]], "called_by": [], "class_name": "UtenteTest", "method_name": "main", "params": ["String[]"]}, "MailUtility.inviareMail(String,String,String,String)": {"calls": [["Utility.ottenereServerSmtp()", "S"]], "called_by": [], "class_name": "MailUtility", "method_name": "inviareMail", "params": ["String", "String", "String", "String"]}, "Utility.ottenereServerSmtp()": {"calls": [], "called_by": [["MailUtility.inviareMail(String,String,String,String)", "S"]], "class_name": "Utility", "method_name": "ottenereServerSmtp", "params": []}, "Utility.sostituireTuttoStrings(String,String,String)": {"calls": [], "called_by": [["Utility.eNull(String)", "S"]], "class_name": "Utility", "method_name": "sostituireTuttoStrings", "params": ["String", "String", "String"]}, "Utility.date2SQLString(Date,boolean)": {"calls": [], "called_by": [["Utility.eNull(Date)", "S"]], "class_name": "Utility", "method_name": "date2SQLString", "params": ["Date", "boolean"]}}